import org.hidetake.gradle.swagger.generator.GenerateSwaggerUI

buildscript {
    ext {
        restdocsApiSpecVersion = '0.19.4' // restdocsApiSpecVersion 버전 변수 설정
    }
}

plugins{
    //restdocs-api-spec → restdocs extension  포함함
    id 'com.epages.restdocs-api-spec' version "${restdocsApiSpecVersion}"
    //swagger generator 플러그인 추가
    id 'org.hidetake.swagger.generator' version '2.19.2'
    id 'org.jetbrains.kotlin.jvm'
}

bootJar { enabled = true }
jar { enabled = true }

dependencies {
    implementation project(':tht-common-utils')
    implementation project(':tht-core:enums')
    implementation project(':tht-core:domain')

    testImplementation testFixtures(project(':tht-core:domain'))
    testImplementation project(':tht-core:domain')
    testImplementation project(':tht-common-utils')

    //h2
    implementation 'com.h2database:h2'

    //Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    //todo. domain 에서 repository 를 생성하면 해당 의존성 없애자
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    //JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    //spring rest docs
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:' + restdocsApiSpecVersion

    // Swagger ui
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.3'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    swaggerUI 'org.webjars:swagger-ui:5.18.2'

    //kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

openapi3 {
    servers = [
            { url = "http://tht-talk.co.kr" },
            { url = "http://localhost:8080" }
    ]
    title = "THT API 문서"
    description = "Spring REST Docs with SwaggerUI."
    version = "0.0.1"
    outputFileNamePrefix = 'open-api-3.0.1'
    format = 'json'

    // src/main/resources/static/docs/open-api-3.0.1.json 생성
    outputDirectory = 'build/resources/main/static/docs'
}

// Task 및 설정 추가
// GenerateSwaggerUI 태스크가, openapi3 task 를 의존하도록 설정
tasks.withType(GenerateSwaggerUI).configureEach {
    dependsOn 'openapi3'

    doFirst {
        def swaggerUIFile = file("${openapi3.outputDirectory}/open-api-3.0.1.json")

        def securitySchemesContent =  "  securitySchemes:\n" +  \
                                      "    bearerAuth:\n" +  \
                                      "      type: http\n" +  \
                                      "      scheme: bearer\n" +  \
                                      "      bearerFormat: JWT\n" +  \
                                      "      name: Authorization\n" +  \
                                      "      in: header\n" + \
                                      "      description: \"Use 'your-access-token' as the value of the Authorization header\"\n" + \
                                      "security:\n" +
                "  - bearerAuth: []  # Apply the security scheme here"

        swaggerUIFile.append securitySchemesContent
    }
}

tasks.named('test') {
    finalizedBy 'openapi3' // added
}

//openAPI 작성 자동화를 위해 패키징 전에 openapi3 테스크 선실행을 유발
bootJar{
    dependsOn(':tht-apis:openapi3')

    delete file('src/main/resources/static/docs/')
    copy {
        from "build/resources/main/static/docs"
        into "src/main/resources/static/docs/"

    }
}

repositories {
    mavenCentral()
}
kotlin {
    jvmToolchain(21)
}